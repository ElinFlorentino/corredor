/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juegohombrecorriendo;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Rectangle;
import java.util.ArrayList;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.net.URISyntaxException;
import java.util.Arrays;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.border.LineBorder;

/**
 *
 * @author josearielpereyra
 */
public class Juego extends javax.swing.JFrame {

  private final Timer temporizador;
  private final PanelDeJuego panelDeJuego;
  private String[] skins = {"Gonzalo"};

  /**
   * Creates new form Juego
   */
  public Juego() {

    try{
      skins = new File(getClass().getResource("/imagenes/skins/").toURI()).list();
      Arrays.sort(skins);
    }
    catch(URISyntaxException ex) {
      JOptionPane.showMessageDialog(this, "No se pudo abrir la carpeta de Skins");
    }
    

    panelDeJuego = new PanelDeJuego(this);

    panelDeJuego.setBorder(new LineBorder(Color.black, 1));

    getContentPane().add(panelDeJuego, BorderLayout.CENTER);

    initComponents();
    setExtendedState(JFrame.MAXIMIZED_BOTH);

    getContentPane().setBackground(new Color(254, 254, 254));

    temporizador = new Timer(100, new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        panelDeJuego.cargarImagen();
      }
    });

    actualizarDelay();
  }

  public boolean estaLloviendo() {
    return cbLlover.isSelected();
  }

  public boolean esDeNoche() {
    return cbAnochecer.isSelected();
  }

  public boolean estaNevando() {
    return cbNevar.isSelected();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    btnCambiarPersonaje = new javax.swing.JButton();
    btnIniciar = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    lblVelocidadActual = new javax.swing.JLabel();
    sliderVelocidad = new javax.swing.JSlider();
    cbLlover = new javax.swing.JCheckBox();
    cbAnochecer = new javax.swing.JCheckBox();
    cbNevar = new javax.swing.JCheckBox();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setBackground(new java.awt.Color(254, 254, 254));
    setSize(new java.awt.Dimension(700, 500));

    btnCambiarPersonaje.setText("Cambiar Personaje");
    btnCambiarPersonaje.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnCambiarPersonajeActionPerformed(evt);
      }
    });
    jPanel1.add(btnCambiarPersonaje);

    btnIniciar.setText("Iniciar");
    btnIniciar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnIniciarActionPerformed(evt);
      }
    });
    jPanel1.add(btnIniciar);

    jLabel1.setText("Velocidad:");
    jPanel1.add(jLabel1);

    lblVelocidadActual.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblVelocidadActual.setText("5");
    jPanel1.add(lblVelocidadActual);

    sliderVelocidad.setMaximum(150);
    sliderVelocidad.setMinimum(1);
    sliderVelocidad.setPaintLabels(true);
    sliderVelocidad.setPaintTicks(true);
    sliderVelocidad.setToolTipText("");
    sliderVelocidad.setValue(1);
    sliderVelocidad.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        sliderVelocidadStateChanged(evt);
      }
    });
    jPanel1.add(sliderVelocidad);

    cbLlover.setText("Llover");
    jPanel1.add(cbLlover);

    cbAnochecer.setText("Anochecer");
    jPanel1.add(cbAnochecer);

    cbNevar.setText("Nevar");
    jPanel1.add(cbNevar);

    getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);
  }// </editor-fold>//GEN-END:initComponents

  private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
    iniciarODetener(btnIniciar.getText());
  }//GEN-LAST:event_btnIniciarActionPerformed

  protected void iniciarODetener(String estado) {
    boolean estaDetenido = estado.equals("Iniciar");
    btnIniciar.setText(estaDetenido ? "Detener" : "Iniciar");

    if (estaDetenido) {
      temporizador.start();
    } else {
      terminar();
    }
  }

  private void sliderVelocidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderVelocidadStateChanged
    actualizarDelay();
  }//GEN-LAST:event_sliderVelocidadStateChanged

  private void btnCambiarPersonajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarPersonajeActionPerformed
    iniciarODetener("Detener");
    JDialog ventana = new JDialog(this, "Seleccionar Personaje", true);
    ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    ventana.setLayout( new GridLayout( skins.length % 2 == 0 ? 2 : 1, 0) );

    ventana.addWindowListener(new WindowAdapter() {
      @Override
      public void windowClosed(WindowEvent e) {
        iniciarODetener("Iniciar");
      }

    });

    try {
      for (int i = 0; i < skins.length; i++) {
        JButton boton = new JButton(skins[i]);
        ventana.add(boton);

        File carpeta = new File(getClass().getResource("/imagenes/skins/" + skins[i]).toURI());

        String ruta = carpeta.getAbsolutePath() + File.separator + carpeta.list()[0];

        Image imagenIcono = new ImageIcon(ruta).getImage().getScaledInstance(100, 100, 1);
        ImageIcon icono = new ImageIcon(imagenIcono);
        boton.setIcon(icono);

        boton.addActionListener(new ActionListener() {
          @Override
          public void actionPerformed(ActionEvent e) {
            int personajeActual = 0;
            for (int j = 0; j < skins.length; j++) {

              if (skins[j].equals(boton.getText())) {

                personajeActual = j;

                break;
              }

            }

            panelDeJuego.jugador.actualizarSkin(personajeActual);
            ventana.dispose();

          }

        });

      }

      ventana.pack();
      ventana.setLocationRelativeTo(panelDeJuego);

      ventana.setVisible(true);

    } catch (URISyntaxException ex) {
      Logger.getLogger(Jugador.class.getName()).log(Level.SEVERE, null, ex);
    }


  }//GEN-LAST:event_btnCambiarPersonajeActionPerformed

  public void actualizarDelay() {
    int maximaVelocidad = sliderVelocidad.getMaximum() + 50;
    temporizador.setDelay(maximaVelocidad - sliderVelocidad.getValue());
    lblVelocidadActual.setText("" + sliderVelocidad.getValue());
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Juego().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnCambiarPersonaje;
  private javax.swing.JButton btnIniciar;
  private javax.swing.JCheckBox cbAnochecer;
  private javax.swing.JCheckBox cbLlover;
  private javax.swing.JCheckBox cbNevar;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JLabel lblVelocidadActual;
  private javax.swing.JSlider sliderVelocidad;
  // End of variables declaration//GEN-END:variables

  void terminar() {
    temporizador.stop();
  }

}
